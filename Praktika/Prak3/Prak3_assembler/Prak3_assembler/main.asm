;
; Prak3_assembler.asm
;
; Created: 24.10.2019 17:24:24
; Author : bh8332s
;

.include "m8def.inc"

.def ledOutput = r21
.def INT0_state = r22
.def INT1_state = r23
.def tmpEORreg = r24	;um 0. Bit zu togglen

.org 0x000
	rjmp initialize
.org INT0addr   ;INT0_vect
    rjmp handleINT0

initialize:
    ldi r16, LOW(RAMEND)
    out SPL, r16
    ldi r16, HIGH(RAMEND)
    out SPH, r16

	ldi INT0_state, 0
	ldi INT1_state, 0
	ldi tmpEORreg, 0b00000001

    ldi ledOutput, 0b00000011 ;LED 0,1 als Ausgang
    out DDRB, ledOutput
    ldi r16, 0x00
    out DDRD, r16

    ldi r16, 0xFF
    out PORTD, r16              ;PullUps fuer Taster

	ldi r16, 0b00001010		;The falling edge of INT0 & INT1 generates an interrupt request -> Seite 67
	out MCUCR, r16

	ldi r16, 0b11000000
	out GICR, r16			;INT0 & INT1 einschalten -> Seite 67

	sei

start:
	rjmp start

handleINT0:
	eor INT0_state, tmpEORreg	;0.bit flippen
	cpi INT0_state, 0b00000001	;LED togglen, falls 0.bit set ; ansonsten ausschalten
	sei
	breq toggleLED0
	rjmp offLED0

offLED0:
	in r16, PORTB
    ANDI r16, 0b11111110
	out PORTB, r16
    rjmp offLED0

toggleLED0:
	in r16, PORTB
	ldi r17, 0b00000001
    eor r16, r17
	out PORTB, r16
	rcall delay_200ms
	rjmp toggleLED0

onLED0:
	ldi r16, 0b00000001
    out PORTB, r16
    rjmp onLED0

delay_200ms:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
;
; Delay 200 000 cycles
; 200ms at 1 MHz

    ldi  r18, 2
    ldi  r19, 4
    ldi  r20, 187
L1: dec  r20
    brne L1
    dec  r19
    brne L1
    dec  r18
    brne L1
    nop
	ret